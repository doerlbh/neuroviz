import "./chunk-6LOWPV43.js";

// node_modules/vizzu/dist/vizzu.min.js
var import_meta = {};
var Render = class {
  init(e, t, r) {
    this.polygonFirstPoint = false, this.offscreenCanvas = document.createElement("CANVAS"), this.offscreenContext = this.offscreenCanvas.getContext("2d"), this.update = e, this.mainCanvas = t, this.mainCanvas.font = "Roboto Condensed", this.mainCanvas.textAlign = "left", this.mainCanvas.textBaseline = "top", this.context = t.getContext("2d"), this.log = r, this.updateCanvasSize(), this.prevUpdateHash = "";
  }
  canvas() {
    return this.mainCanvas;
  }
  dc() {
    return this.offscreenContext;
  }
  clientRect() {
    return this.mainCanvas.getBoundingClientRect();
  }
  frameBegin() {
    this.currentLineWidth = 1, this.offscreenContext.clearRect(-1, -1, this.mainCanvas.width + 1, this.mainCanvas.height + 1);
  }
  frameEnd() {
    this.context.clearRect(-1, -1, this.mainCanvas.width + 1, this.mainCanvas.height + 1), this.context.drawImage(this.offscreenCanvas, 0, 0);
  }
  lineWidthNotification(e) {
    this.currentLineWidth = e;
  }
  noneZeroLineWidth() {
    return this.currentLineWidth !== 0;
  }
  startPolygonNotification() {
    var e = this.polygonFirstPoint;
    return this.polygonFirstPoint = true, !e;
  }
  endPolygonNotification() {
    this.polygonFirstPoint = false;
  }
  updateCanvasSize() {
    this.scaleFactor = window.devicePixelRatio, this.cssWidth = +getComputedStyle(this.mainCanvas).width.slice(0, -2), this.cssHeight = +getComputedStyle(this.mainCanvas).height.slice(0, -2);
    var e = `${this.scaleFactor}:${this.cssWidth}:` + this.cssHeight;
    e !== this.prevUpdateHash && (this.mainCanvas.width = this.cssWidth * this.scaleFactor, this.mainCanvas.height = this.cssHeight * this.scaleFactor, this.offscreenCanvas.width = this.cssWidth * this.scaleFactor, this.offscreenCanvas.height = this.cssHeight * this.scaleFactor, this.offscreenContext.translate(0.5, 0.5), this.offscreenContext.scale(this.scaleFactor, this.scaleFactor)), this.prevUpdateHash = e;
  }
  updateFrame(e) {
    var t = performance.now(), e = (this.updateCanvasSize(), 0 < this.mainCanvas.width && 0 < this.mainCanvas.height && this.update(this.scaleFactor, this.cssWidth, this.cssHeight, e), performance.now() - t);
    this.log && 1 < e && console.log("Render.updateFrame: " + e.toFixed(2) + "ms");
  }
};
var Events = class {
  constructor(e) {
    this.vizzu = e, this.module = e.module, this.eventHandlers = /* @__PURE__ */ new Map();
  }
  add(e, t) {
    if (e !== "" + e)
      throw new Error("first parameter should be string");
    e = this.vizzu.toCString(e);
    try {
      var r = this.vizzu.call(this.module._addEventListener)(e);
      this.eventHandlers.set(r, t);
    } finally {
      this.module._free(e);
    }
  }
  remove(e, n) {
    var t = this.vizzu.toCString(e);
    if (e !== "" + e)
      throw new Error("first parameter should be string");
    try {
      if (n) {
        let r = null;
        if (this.eventHandlers.forEach((e2, t2) => {
          e2 === n && (r = t2);
        }), r === null)
          throw new Error("unknown event handler");
        this.vizzu.call(this.module._removeEventListener)(t, r);
      } else
        this.vizzu.call(this.module._removeEventListener)(t, 0);
    } finally {
      this.eventHandlers.delete(n), this.module._free(t);
    }
  }
  invoke(t, r) {
    try {
      if (this.eventHandlers.has(t)) {
        let e = JSON.parse(this.vizzu.fromCString(r));
        e.preventDefault = () => {
          this.vizzu.call(this.module._event_preventDefault)();
        }, e.event.endsWith("-draw") && (e.renderingContext = this.vizzu.render.dc()), this.eventHandlers.get(t)(e);
      }
    } catch (e) {
      console.log("exception in event handler: " + e);
    }
  }
};
var assert = (e, t) => {
  if (!e)
    throw new Error("Assert failed: " + t);
};
var assertArray = (t, e, r) => {
  assert(Array.isArray(e), "array is not a list");
  try {
    if (e.length !== t.dimensions[r].values.length)
      throw new Error("Assert failed");
  } catch (e2) {
    assert(false, "dimensions are not the same");
  }
  e.forEach((e2) => {
    Array.isArray(e2) && assertArray(t, e2, r - 1);
  });
};
var UnPivot = class {
  static isPivot(e) {
    return (e == null ? void 0 : e.dimensions) !== void 0 || (e == null ? void 0 : e.measures) !== void 0;
  }
  static convert(i) {
    assert(typeof i == "object" && i !== null && !Array.isArray(i), "data is not an object"), assert("dimensions" in i, "data.dimensions is requreid"), assert("measures" in i, "data.measures is requreid"), i.series = [];
    let a = 1;
    assert(Array.isArray(i.dimensions), "data.dimensions is not a list");
    for (let e = 0; e < i.dimensions.length; e++) {
      var t = i.dimensions[e];
      assert(typeof t == "object" && t !== null && !Array.isArray(t), "data.dimensions.item is not an object"), assert("name" in t, "data.dimensions.item.name is requreid"), assert(t.type === void 0 || t.type === "dimension", "data.dimensions.item.type is invalid"), assert("values" in t, "data.dimensions.item.values is requreid"), assert(Array.isArray(t.values), "data.dimensions.item.values is not a list"), assert(t.values.length !== 0, "data.dimensions.item.values length is zero"), a *= t.values.length;
    }
    let s = 1;
    for (let n = 0; n < i.dimensions.length; n++) {
      let e = i.dimensions[n], t2 = [], r = [];
      e.values.forEach((t3) => {
        for (let e2 = 1; e2 <= s; e2++)
          r.push(t3);
      }), s *= e.values.length;
      for (let e2 = 1; e2 <= a / s; e2++)
        t2 = t2.concat(r);
      var o = { name: e.name, type: e.type || "dimension", values: t2 };
      i.series.push(o);
    }
    assert(typeof i.measures == "object" && i.measures !== null, "data.measures is not a list or an object"), Array.isArray(i.measures) || (i.measures = [i.measures]);
    for (let r = 0; r < i.measures.length; r++) {
      let e = i.measures[r], t2 = (assert(typeof e == "object" && e !== null && !Array.isArray(e), "data.measures.item is not an object"), assert("name" in e, "data.measures.item.name is requreid"), assert("values" in e, "data.measures.item.values is requreid"), assert(Array.isArray(e.values), "data.measures.item.values is not a list"), assertArray(i, e.values, i.dimensions.length - 1), { name: e.name, type: e.type, values: e.values.flat(1 / 0) });
      t2.type === void 0 && delete t2.type, assert(t2.values.length === a, "dimensions are not the same"), i.series.push(t2);
    }
  }
};
var DataRecord = class {
  constructor(e, t) {
    return this.chart = e, this.record = t, new Proxy(this, { get: (e2, t2) => e2.getValue(t2) });
  }
  getValue(e) {
    e = this.chart.toCString(e);
    let t, r;
    try {
      t = this.chart.call(this.chart.module._record_getValue)(this.record, e, true), r = t ? this.chart.fromCString(t) : (t = this.chart.call(this.chart.module._record_getValue)(this.record, e, false), this.chart.module.getValue(t, "double"));
    } finally {
      this.chart.module._free(e);
    }
    return r;
  }
};
var Data = class {
  constructor(e) {
    this.chart = e;
  }
  set(e) {
    if (e) {
      if (UnPivot.isPivot(e)) {
        if (this.is1NF(e))
          throw new Error("inconsistent data form: series/records and dimensions/measures are both set.");
        UnPivot.convert(e);
      }
      if (e.series) {
        if (!Array.isArray(e.series))
          throw new Error("data series field is not an array");
        for (const t of e.series)
          this.setSeries(t);
      }
      if (e.records) {
        if (!Array.isArray(e.records))
          throw new Error("data records field is not an array");
        for (const r of e.records)
          this.addRecord(r);
      }
      !e.filter && e.filter !== null || this.setFilter(e.filter);
    }
  }
  addRecord(t) {
    if (!Array.isArray(t))
      throw new Error("data record is not an array");
    let r = new Uint32Array(t.length);
    for (let e2 = 0; e2 < t.length; e2++) {
      var n = this.chart.toCString(String(t[e2]).toString());
      r[e2] = n;
    }
    var e = 4 * t.length, i = this.chart.module._malloc(e);
    new Uint8Array(this.chart.module.HEAPU8.buffer, i, e).set(new Uint8Array(r.buffer));
    try {
      this.chart.call(this.chart.module._data_addRecord)(i, t.length);
    } finally {
      for (var a of r)
        this.chart.module._free(a);
      this.chart.module._free(i);
    }
  }
  setSeries(e) {
    if (!e.name)
      throw new Error("missing series name");
    if (e.values || (e.values = []), e.type || (e.type = this.detectType(e.values)), e.type === "dimension")
      this.addDimension(e.name, e.values);
    else {
      if (e.type !== "measure")
        throw new Error("invalid series type: " + e.type);
      this.addMeasure(e.name, e.values);
    }
  }
  detectType(e) {
    if (Array.isArray(e) && e.length) {
      if (typeof e[0] == "number")
        return "measure";
      if (e[0] === "" + e[0])
        return "dimension";
    }
    return null;
  }
  addDimension(e, t) {
    if (typeof e != "string" && !(e instanceof String))
      throw new Error("first parameter should be string");
    if (!(t instanceof Array))
      throw new Error("second parameter should be an array");
    let r = new Uint32Array(t.length);
    for (let e2 = 0; e2 < t.length; e2++) {
      if (typeof t[e2] != "string" && !(t[e2] instanceof String))
        throw new Error("array element should be string");
      var n = this.chart.toCString(t[e2]);
      r[e2] = n;
    }
    var i = 4 * t.length, a = this.chart.module._malloc(i), i = (new Uint8Array(this.chart.module.HEAPU8.buffer, a, i).set(new Uint8Array(r.buffer)), this.chart.toCString(e));
    try {
      this.chart.call(this.chart.module._data_addDimension)(i, a, t.length);
    } finally {
      this.chart.module._free(i);
      for (var s of r)
        this.chart.module._free(s);
      this.chart.module._free(a);
    }
  }
  addMeasure(e, t) {
    if (typeof e != "string" && !(e instanceof String))
      throw new Error("first parameter should be string");
    if (!(t instanceof Array))
      throw new Error("second parameter should be an array");
    var r = new Float64Array(t), n = 8 * t.length, i = this.chart.module._malloc(n), n = (new Uint8Array(this.chart.module.HEAPU8.buffer, i, n).set(new Uint8Array(r.buffer)), this.chart.toCString(e));
    try {
      this.chart.call(this.chart.module._data_addMeasure)(n, i, t.length);
    } finally {
      this.chart.module._free(n), this.chart.module._free(i);
    }
  }
  setFilter(t) {
    if (typeof t == "function") {
      var e = this.chart.module.addFunction((e2) => t(new DataRecord(this.chart, e2)), "ii");
      this.chart.call(this.chart.module._chart_setFilter)(e);
    } else {
      if (t !== null)
        throw new Error("data filter is not a function or null");
      this.chart.call(this.chart.module._chart_setFilter)(0);
    }
  }
  is1NF(e) {
    return e.series || e.records;
  }
};
var AnimControl = class extends Promise {
  constructor(r, e) {
    super((e2, t) => {
      r(e2, t);
    }), this.chart = e;
  }
  then(e, t) {
    const r = super.then(e, t);
    return r.chart = this.chart, r;
  }
  get [Symbol.toStringTag]() {
    return "AnimControl";
  }
  seek(e) {
    return this.animControl("seek", e), this;
  }
  pause() {
    return this.animControl("pause"), this;
  }
  play() {
    return this.animControl("play"), this;
  }
  stop() {
    return this.animControl("stop"), this;
  }
  reverse() {
    return this.animControl("reverse"), this;
  }
  animControl(e, t = "") {
    e = this.chart.toCString(e), t = this.chart.toCString(t);
    try {
      this.chart.call(this.chart.module._anim_control)(e, t);
    } finally {
      this.chart.module._free(t), this.chart.module._free(e);
    }
  }
};
var Tooltip = class {
  constructor(e) {
    this.set = false, this.chart = e, this.id = 0, this.animating = false, this.lastMarkerId = null, this.lastMove = new Date(), this.mouseMoveHandler = (e2) => {
      this.mousemove(e2);
    }, this.mouseOnHandler = (e2) => {
      this.mouseon(e2);
    }, this.enabled = false;
  }
  enable(e) {
    e !== this.set && (e ? (this.chart.on("mousemove", this.mouseMoveHandler), this.chart.on("mouseon", this.mouseOnHandler)) : (this.chart.off("mousemove", this.mouseMoveHandler), this.chart.off("mouseon", this.mouseOnHandler), this.id++, setTimeout(() => {
      this.out(this.id);
    }, 200)), this.set = e);
  }
  mousemove() {
    this.lastMove = new Date();
  }
  mouseon(e) {
    this.id++;
    let t = this.id;
    e.data.marker ? setTimeout(() => {
      this.in(t, e.data.marker.id);
    }, 0) : setTimeout(() => {
      this.out(t);
    }, 200);
  }
  in(e, t) {
    this.id === e && (this.animating ? setTimeout(() => {
      this.in(e, t);
    }, 100) : (this.lastMarkerId = t, this.animating = true, this.chart.animate({ config: { tooltip: t } }, this.lastMarkerId ? "100ms" : "250ms").then(() => {
      this.animating = false;
    })));
  }
  out(e) {
    var t;
    this.id === e && (t = new Date() - this.lastMove, !this.animating && 200 < t ? (this.lastMarkerId = null, this.animating = true, this.chart.animate({ config: { tooltip: null } }, "250ms").then(() => {
      this.animating = false;
    })) : setTimeout(() => {
      this.out(e);
    }, 200 - t));
  }
};
var VizzuModule = function() {
  var We = import_meta.url;
  return function(e) {
    var x, L, t, u = (e = e || {}) !== void 0 ? e : {}, r = (u.ready = new Promise(function(e2, t2) {
      x = e2, L = t2;
    }), {});
    for (t in u)
      u.hasOwnProperty(t) && (r[t] = u[t]);
    var H, n = "";
    document.currentScript && (n = document.currentScript.src);
    var n = (n = We ? We : n).indexOf("blob:") !== 0 ? n.substr(0, n.lastIndexOf("/") + 1) : "", j = console.log.bind(console), a = console.warn.bind(console);
    for (t in r)
      r.hasOwnProperty(t) && (u[t] = r[t]);
    var s, D, o, r = null, l = [];
    function R(t2, r2) {
      var n2, i2 = I;
      if (!s) {
        s = /* @__PURE__ */ new WeakMap();
        for (var e2 = 0; e2 < i2.length; e2++) {
          var a2 = i2.get(e2);
          a2 && s.set(a2, e2);
        }
      }
      if (s.has(t2))
        return s.get(t2);
      if (l.length)
        n2 = l.pop();
      else {
        n2 = i2.length;
        try {
          i2.grow(1);
        } catch (e3) {
          if (e3 instanceof RangeError)
            throw "Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.";
          throw e3;
        }
      }
      try {
        i2.set(n2, t2);
      } catch (e3) {
        if (!(e3 instanceof TypeError))
          throw e3;
        r2 = function(e4, t3) {
          if (typeof WebAssembly.Function == "function") {
            for (var r3 = { i: "i32", j: "i64", f: "f32", d: "f64" }, n3 = { parameters: [], results: t3[0] == "v" ? [] : [r3[t3[0]]] }, i3 = 1; i3 < t3.length; ++i3)
              n3.parameters.push(r3[t3[i3]]);
            return new WebAssembly.Function(n3, e4);
          }
          var a3 = [1, 0, 1, 96], s2 = t3.slice(0, 1), o2 = t3.slice(1), l2 = { i: 127, j: 126, f: 125, d: 124 };
          for (a3.push(o2.length), i3 = 0; i3 < o2.length; ++i3)
            a3.push(l2[o2[i3]]);
          return s2 == "v" ? a3.push(0) : a3 = a3.concat([1, l2[s2]]), a3[1] = a3.length - 2, s2 = new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0].concat(a3, [2, 7, 1, 1, 101, 1, 102, 0, 0, 7, 5, 1, 1, 102, 0, 0])), s2 = new WebAssembly.Module(s2), new WebAssembly.Instance(s2, { e: { f: e4 } }).exports.f;
        }(t2, r2);
        i2.set(n2, r2);
      }
      return s.set(t2, n2), n2;
    }
    function i(e2, t2, r2, n2) {
      switch (r2 = (r2 = r2 || "i8").charAt(r2.length - 1) === "*" ? "i32" : r2) {
        case "i1":
        case "i8":
          f[e2 >> 0] = t2;
          break;
        case "i16":
          v[e2 >> 1] = t2;
          break;
        case "i32":
          y[e2 >> 2] = t2;
          break;
        case "i64":
          S = [t2 >>> 0, 1 <= +ae(S = t2) ? 0 < S ? (0 | le(+oe(S / 4294967296), 4294967295)) >>> 0 : ~~+se((S - (~~S >>> 0)) / 4294967296) >>> 0 : 0], y[e2 >> 2] = S[0], y[e2 + 4 >> 2] = S[1];
          break;
        case "float":
          _[e2 >> 2] = t2;
          break;
        case "double":
          w[e2 >> 3] = t2;
          break;
        default:
          C("invalid type for setValue: " + r2);
      }
    }
    function c(e2, t2, r2) {
      switch (t2 = (t2 = t2 || "i8").charAt(t2.length - 1) === "*" ? "i32" : t2) {
        case "i1":
        case "i8":
          return f[e2 >> 0];
        case "i16":
          return v[e2 >> 1];
        case "i32":
        case "i64":
          return y[e2 >> 2];
        case "float":
          return _[e2 >> 2];
        case "double":
          return w[e2 >> 3];
        default:
          C("invalid type for getValue: " + t2);
      }
      return null;
    }
    typeof WebAssembly != "object" && C("no native wasm support detected");
    var I = new WebAssembly.Table({ initial: 1164, element: "anyfunc" }), N = false, B = typeof TextDecoder != "undefined" ? new TextDecoder("utf8") : void 0;
    function q(e2, t2, r2) {
      for (var n2 = t2 + r2, i2 = t2; e2[i2] && !(n2 <= i2); )
        ++i2;
      if (16 < i2 - t2 && e2.subarray && B)
        return B.decode(e2.subarray(t2, i2));
      for (var a2 = ""; t2 < i2; ) {
        var s2, o2, l2 = e2[t2++];
        128 & l2 ? (o2 = 63 & e2[t2++], (224 & l2) == 192 ? a2 += String.fromCharCode((31 & l2) << 6 | o2) : (s2 = 63 & e2[t2++], (l2 = (240 & l2) == 224 ? (15 & l2) << 12 | o2 << 6 | s2 : (7 & l2) << 18 | o2 << 12 | s2 << 6 | 63 & e2[t2++]) < 65536 ? a2 += String.fromCharCode(l2) : (o2 = l2 - 65536, a2 += String.fromCharCode(55296 | o2 >> 10, 56320 | 1023 & o2)))) : a2 += String.fromCharCode(l2);
      }
      return a2;
    }
    function h(e2, t2) {
      return e2 ? q(m, e2, t2) : "";
    }
    function J(e2, t2, r2) {
      var n2 = e2, i2 = m, a2 = t2, e2 = r2;
      if (!(0 < e2))
        return 0;
      for (var t2 = a2, s2 = a2 + e2 - 1, o2 = 0; o2 < n2.length; ++o2) {
        var l2 = n2.charCodeAt(o2);
        if ((l2 = 55296 <= l2 && l2 <= 57343 ? 65536 + ((1023 & l2) << 10) | 1023 & n2.charCodeAt(++o2) : l2) <= 127) {
          if (s2 <= a2)
            break;
          i2[a2++] = l2;
        } else if (l2 <= 2047) {
          if (s2 <= a2 + 1)
            break;
          i2[a2++] = 192 | l2 >> 6, i2[a2++] = 128 | 63 & l2;
        } else if (l2 <= 65535) {
          if (s2 <= a2 + 2)
            break;
          i2[a2++] = 224 | l2 >> 12, i2[a2++] = 128 | l2 >> 6 & 63, i2[a2++] = 128 | 63 & l2;
        } else {
          if (s2 <= a2 + 3)
            break;
          i2[a2++] = 240 | l2 >> 18, i2[a2++] = 128 | l2 >> 12 & 63, i2[a2++] = 128 | l2 >> 6 & 63, i2[a2++] = 128 | 63 & l2;
        }
      }
      return i2[a2] = 0, a2 - t2;
    }
    var Z = typeof TextDecoder != "undefined" ? new TextDecoder("utf-16le") : void 0;
    function Y(e2, t2) {
      for (var r2, n2 = e2 >> 1, i2 = n2 + t2 / 2; !(i2 <= n2) && p[n2]; )
        ++n2;
      if (32 < (r2 = n2 << 1) - e2 && Z)
        return Z.decode(m.subarray(e2, r2));
      for (var a2 = 0, s2 = ""; ; ) {
        var o2 = v[e2 + 2 * a2 >> 1];
        if (o2 == 0 || a2 == t2 / 2)
          return s2;
        ++a2, s2 += String.fromCharCode(o2);
      }
    }
    function $(e2, t2, r2) {
      if ((r2 = r2 === void 0 ? 2147483647 : r2) < 2)
        return 0;
      for (var n2 = t2, i2 = (r2 -= 2) < 2 * e2.length ? r2 / 2 : e2.length, a2 = 0; a2 < i2; ++a2) {
        var s2 = e2.charCodeAt(a2);
        v[t2 >> 1] = s2, t2 += 2;
      }
      return v[t2 >> 1] = 0, t2 - n2;
    }
    function G(e2) {
      return 2 * e2.length;
    }
    function K(e2, t2) {
      for (var r2 = 0, n2 = ""; !(t2 / 4 <= r2); ) {
        var i2, a2 = y[e2 + 4 * r2 >> 2];
        if (a2 == 0)
          break;
        ++r2, 65536 <= a2 ? (i2 = a2 - 65536, n2 += String.fromCharCode(55296 | i2 >> 10, 56320 | 1023 & i2)) : n2 += String.fromCharCode(a2);
      }
      return n2;
    }
    function X(e2, t2, r2) {
      if ((r2 = r2 === void 0 ? 2147483647 : r2) < 4)
        return 0;
      for (var n2 = t2, i2 = n2 + r2 - 4, a2 = 0; a2 < e2.length; ++a2) {
        var s2 = e2.charCodeAt(a2);
        if (55296 <= s2 && s2 <= 57343 && (s2 = 65536 + ((1023 & s2) << 10) | 1023 & e2.charCodeAt(++a2)), y[t2 >> 2] = s2, i2 < (t2 += 4) + 4)
          break;
      }
      return y[t2 >> 2] = 0, t2 - n2;
    }
    function Q(e2) {
      for (var t2 = 0, r2 = 0; r2 < e2.length; ++r2) {
        var n2 = e2.charCodeAt(r2);
        55296 <= n2 && n2 <= 57343 && ++r2, t2 += 4;
      }
      return t2;
    }
    var d, f, m, v, p, y, g, _, w;
    function ee(e2) {
      d = e2, u.HEAP8 = f = new Int8Array(e2), u.HEAP16 = v = new Int16Array(e2), u.HEAP32 = y = new Int32Array(e2), u.HEAPU8 = m = new Uint8Array(e2), u.HEAPU16 = p = new Uint16Array(e2), u.HEAPU32 = g = new Uint32Array(e2), u.HEAPF32 = _ = new Float32Array(e2), u.HEAPF64 = w = new Float64Array(e2);
    }
    function b(e2) {
      for (; 0 < e2.length; ) {
        var t2, r2 = e2.shift();
        typeof r2 == "function" ? r2(u) : typeof (t2 = r2.func) == "number" ? r2.arg === void 0 ? u.dynCall_v(t2) : u.dynCall_vi(t2, r2.arg) : t2(r2.arg === void 0 ? null : r2.arg);
      }
    }
    o = new WebAssembly.Memory({ initial: 256, maximum: 32768 }), (d = o ? o.buffer : d).byteLength, ee(d), y[14580] = 5301360;
    var te = [], re = [], ne = [], ie = [];
    var ae = Math.abs, se = Math.ceil, oe = Math.floor, le = Math.min, A = 0, z = null;
    function C(e2) {
      a(e2 += ""), N = true, e2 = "abort(" + e2 + "). Build with -s ASSERTIONS=1 for more info.";
      e2 = new WebAssembly.RuntimeError(e2);
      throw L(e2), e2;
    }
    u.preloadedImages = {}, u.preloadedAudios = {};
    function ue(e2) {
      return e2 = e2, t2 = "data:application/octet-stream;base64,", String.prototype.startsWith ? e2.startsWith(t2) : e2.indexOf(t2) === 0;
      var t2;
    }
    var ce, S, E = "cvizzu.wasm";
    function he() {
      try {
        if (D)
          return new Uint8Array(D);
        if (H)
          return H(E);
        throw "both async and sync fetching of the wasm failed";
      } catch (e2) {
        C(e2);
      }
    }
    function de(e2) {
      switch (e2) {
        case 1:
          return 0;
        case 2:
          return 1;
        case 4:
          return 2;
        case 8:
          return 3;
        default:
          throw new TypeError("Unknown type size: " + e2);
      }
    }
    ue(E) || (ce = E, E = u.locateFile ? u.locateFile(ce, n) : n + ce), re.push({ func: function() {
      Fe();
    } });
    var fe = void 0;
    function P(e2) {
      for (var t2 = "", r2 = e2; m[r2]; )
        t2 += fe[m[r2++]];
      return t2;
    }
    var me = {}, ve = {}, pe = 48, ye = 57;
    function ge(e2, t2) {
      return e2 = function(e3) {
        if (e3 === void 0)
          return "_unknown";
        var t3 = (e3 = e3.replace(/[^a-zA-Z0-9_]/g, "$")).charCodeAt(0);
        return pe <= t3 && t3 <= ye ? "_" + e3 : e3;
      }(e2), new Function("body", "return function " + e2 + '() {\n    "use strict";    return body.apply(this, arguments);\n};\n')(t2);
    }
    function _e(e2, t2) {
      var r2 = ge(t2, function(e3) {
        this.name = t2, this.message = e3;
        e3 = new Error(e3).stack;
        e3 !== void 0 && (this.stack = this.toString() + "\n" + e3.replace(/^Error(:[^\n]*)?\n/, ""));
      });
      return r2.prototype = Object.create(e2.prototype), (r2.prototype.constructor = r2).prototype.toString = function() {
        return this.message === void 0 ? this.name : this.name + ": " + this.message;
      }, r2;
    }
    var we = void 0;
    function T(e2) {
      throw new we(e2);
    }
    function F(e2, t2, r2) {
      if (r2 = r2 || {}, !("argPackAdvance" in t2))
        throw new TypeError("registerType registeredInstance requires argPackAdvance");
      var n2 = t2.name;
      if (e2 || T('type "' + n2 + '" must have a positive integer typeid pointer'), ve.hasOwnProperty(e2)) {
        if (r2.ignoreDuplicateRegistrations)
          return;
        T("Cannot register type '" + n2 + "' twice");
      }
      ve[e2] = t2, me.hasOwnProperty(e2) && (r2 = me[e2], delete me[e2], r2.forEach(function(e3) {
        e3();
      }));
    }
    var be = [], k = [{}, { value: void 0 }, { value: null }, { value: true }, { value: false }];
    function Ae() {
      for (var e2 = 0, t2 = 5; t2 < k.length; ++t2)
        k[t2] !== void 0 && ++e2;
      return e2;
    }
    function ze() {
      for (var e2 = 5; e2 < k.length; ++e2)
        if (k[e2] !== void 0)
          return k[e2];
      return null;
    }
    function Ce(e2) {
      return this.fromWireType(g[e2 >> 2]);
    }
    function Se(e2) {
      if (e2 === null)
        return "null";
      var t2 = typeof e2;
      return t2 == "object" || t2 == "array" || t2 == "function" ? e2.toString() : "" + e2;
    }
    var Ee = function() {
      return performance.now();
    };
    var W = { mappings: {}, buffers: [null, [], []], printChar: function(e2, t2) {
      var r2 = W.buffers[e2];
      t2 === 0 || t2 === 10 ? ((e2 === 1 ? j : a)(q(r2, 0)), r2.length = 0) : r2.push(t2);
    }, varargs: void 0, get: function() {
      return W.varargs += 4, y[W.varargs - 4 >> 2];
    }, getStr: function(e2) {
      return h(e2);
    }, get64: function(e2, t2) {
      return e2;
    } };
    for (var Pe = new Array(256), O = 0; O < 256; ++O)
      Pe[O] = String.fromCharCode(O);
    fe = Pe, we = u.BindingError = _e(Error, "BindingError"), u.InternalError = _e(Error, "InternalError"), u.count_emval_handles = Ae, u.get_first_emval = ze;
    var M, Te = { a: function(e2) {
      return U(e2);
    }, b: function(e2, t2, r2) {
      throw e2;
    }, x: function(e2, r2, n2, i2, a2) {
      var s2 = de(n2);
      F(e2, { name: r2 = P(r2), fromWireType: function(e3) {
        return !!e3;
      }, toWireType: function(e3, t2) {
        return t2 ? i2 : a2;
      }, argPackAdvance: 8, readValueFromPointer: function(e3) {
        var t2;
        if (n2 === 1)
          t2 = f;
        else if (n2 === 2)
          t2 = v;
        else {
          if (n2 !== 4)
            throw new TypeError("Unknown boolean type size: " + r2);
          t2 = y;
        }
        return this.fromWireType(t2[e3 >> s2]);
      }, destructorFunction: null });
    }, v: function(e2, t2) {
      F(e2, { name: t2 = P(t2), fromWireType: function(e3) {
        var t3 = k[e3].value;
        return 4 < (e3 = e3) && --k[e3].refcount == 0 && (k[e3] = void 0, be.push(e3)), t3;
      }, toWireType: function(e3, t3) {
        var r2 = t3;
        switch (r2) {
          case void 0:
            return 1;
          case null:
            return 2;
          case true:
            return 3;
          case false:
            return 4;
          default:
            var n2 = be.length ? be.pop() : k.length;
            return k[n2] = { refcount: 1, value: r2 }, n2;
        }
      }, argPackAdvance: 8, readValueFromPointer: Ce, destructorFunction: null });
    }, h: function(e2, t2, r2) {
      r2 = de(r2), F(e2, { name: t2 = P(t2), fromWireType: function(e3) {
        return e3;
      }, toWireType: function(e3, t3) {
        if (typeof t3 != "number" && typeof t3 != "boolean")
          throw new TypeError('Cannot convert "' + Se(t3) + '" to ' + this.name);
        return t3;
      }, argPackAdvance: 8, readValueFromPointer: function(e3, t3) {
        switch (t3) {
          case 2:
            return function(e4) {
              return this.fromWireType(_[e4 >> 2]);
            };
          case 3:
            return function(e4) {
              return this.fromWireType(w[e4 >> 3]);
            };
          default:
            throw new TypeError("Unknown float type: " + e3);
        }
      }(t2, r2), destructorFunction: null });
    }, d: function(e2, r2, t2, n2, i2) {
      r2 = P(r2), i2 === -1 && (i2 = 4294967295);
      var a2, s2 = de(t2), o2 = function(e3) {
        return e3;
      }, l2 = (n2 === 0 && (a2 = 32 - 8 * t2, o2 = function(e3) {
        return e3 << a2 >>> a2;
      }), r2.indexOf("unsigned") != -1);
      F(e2, { name: r2, fromWireType: o2, toWireType: function(e3, t3) {
        if (typeof t3 != "number" && typeof t3 != "boolean")
          throw new TypeError('Cannot convert "' + Se(t3) + '" to ' + this.name);
        if (t3 < n2 || i2 < t3)
          throw new TypeError('Passing a number "' + Se(t3) + '" from JS side to C/C++ side to an argument of type "' + r2 + '", which is outside the valid range [' + n2 + ", " + i2 + "]!");
        return l2 ? t3 >>> 0 : 0 | t3;
      }, argPackAdvance: 8, readValueFromPointer: function(e3, t3, r3) {
        switch (t3) {
          case 0:
            return r3 ? function(e4) {
              return f[e4];
            } : function(e4) {
              return m[e4];
            };
          case 1:
            return r3 ? function(e4) {
              return v[e4 >> 1];
            } : function(e4) {
              return p[e4 >> 1];
            };
          case 2:
            return r3 ? function(e4) {
              return y[e4 >> 2];
            } : function(e4) {
              return g[e4 >> 2];
            };
          default:
            throw new TypeError("Unknown integer type: " + e3);
        }
      }(r2, s2, n2 !== 0), destructorFunction: null });
    }, c: function(e2, t2, r2) {
      var n2 = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array][t2];
      function i2(e3) {
        var t3 = g, r3 = t3[e3 >>= 2], t3 = t3[e3 + 1];
        return new n2(d, t3, r3);
      }
      F(e2, { name: r2 = P(r2), fromWireType: i2, argPackAdvance: 8, readValueFromPointer: i2 }, { ignoreDuplicateRegistrations: true });
    }, i: function(e2, t2) {
      var l2 = (t2 = P(t2)) === "std::string";
      F(e2, { name: t2, fromWireType: function(e3) {
        var t3 = g[e3 >> 2];
        if (l2)
          for (var r2 = e3 + 4, n2 = 0; n2 <= t3; ++n2) {
            var i2, a2, s2 = e3 + 4 + n2;
            n2 != t3 && m[s2] != 0 || (i2 = h(r2, s2 - r2), a2 = a2 === void 0 ? i2 : a2 + String.fromCharCode(0) + i2, r2 = s2 + 1);
          }
        else {
          for (var o2 = new Array(t3), n2 = 0; n2 < t3; ++n2)
            o2[n2] = String.fromCharCode(m[e3 + 4 + n2]);
          a2 = o2.join("");
        }
        return V(e3), a2;
      }, toWireType: function(e3, i2) {
        var t3 = typeof (i2 = i2 instanceof ArrayBuffer ? new Uint8Array(i2) : i2) == "string", r2 = (t3 || i2 instanceof Uint8Array || i2 instanceof Uint8ClampedArray || i2 instanceof Int8Array || T("Cannot pass non-string to std::string"), (l2 && t3 ? function() {
          for (var e4 = i2, t4 = 0, r3 = 0; r3 < e4.length; ++r3) {
            var n3 = e4.charCodeAt(r3);
            (n3 = 55296 <= n3 && n3 <= 57343 ? 65536 + ((1023 & n3) << 10) | 1023 & e4.charCodeAt(++r3) : n3) <= 127 ? ++t4 : t4 += n3 <= 2047 ? 2 : n3 <= 65535 ? 3 : 4;
          }
          return t4;
        } : function() {
          return i2.length;
        })()), n2 = U(4 + r2 + 1);
        if (g[n2 >> 2] = r2, l2 && t3)
          J(i2, n2 + 4, r2 + 1);
        else if (t3)
          for (var a2 = 0; a2 < r2; ++a2) {
            var s2 = i2.charCodeAt(a2);
            255 < s2 && (V(n2), T("String has UTF-16 code units that do not fit in 8 bits")), m[n2 + 4 + a2] = s2;
          }
        else
          for (a2 = 0; a2 < r2; ++a2)
            m[n2 + 4 + a2] = i2[a2];
        return e3 !== null && e3.push(V, n2), n2;
      }, argPackAdvance: 8, readValueFromPointer: Ce, destructorFunction: function(e3) {
        V(e3);
      } });
    }, f: function(e2, l2, i2) {
      var u2, a2, c2, s2, h2;
      i2 = P(i2), l2 === 2 ? (u2 = Y, a2 = $, s2 = G, c2 = function() {
        return p;
      }, h2 = 1) : l2 === 4 && (u2 = K, a2 = X, s2 = Q, c2 = function() {
        return g;
      }, h2 = 2), F(e2, { name: i2, fromWireType: function(e3) {
        for (var t2 = g[e3 >> 2], r2 = c2(), n2 = e3 + 4, i3 = 0; i3 <= t2; ++i3) {
          var a3, s3, o2 = e3 + 4 + i3 * l2;
          i3 != t2 && r2[o2 >> h2] != 0 || (a3 = u2(n2, o2 - n2), s3 = s3 === void 0 ? a3 : s3 + String.fromCharCode(0) + a3, n2 = o2 + l2);
        }
        return V(e3), s3;
      }, toWireType: function(e3, t2) {
        typeof t2 != "string" && T("Cannot pass non-string to C++ string type " + i2);
        var r2 = s2(t2), n2 = U(4 + r2 + l2);
        return g[n2 >> 2] = r2 >> h2, a2(t2, n2 + 4, r2 + l2), e3 !== null && e3.push(V, n2), n2;
      }, argPackAdvance: 8, readValueFromPointer: Ce, destructorFunction: function(e3) {
        V(e3);
      } });
    }, y: function(e2, t2) {
      F(e2, { isVoid: true, name: t2 = P(t2), argPackAdvance: 0, fromWireType: function() {
      }, toWireType: function(e3, t3) {
      } });
    }, e: function() {
      C();
    }, L: function(e2, t2, r2, n2, i2, a2) {
      u.render.dc().bezierCurveTo(e2, t2, r2, n2, i2, a2);
    }, M: function(e2, t2) {
      var r2 = u.render.dc();
      u.render.startPolygonNotification() ? r2.moveTo(e2, t2) : r2.lineTo(e2, t2);
    }, T: function() {
    }, N: function() {
      u.render.dc().beginPath();
    }, I: function(e2, t2, r2) {
      var n2 = u.render.dc();
      n2.beginPath(), n2.arc(e2, t2, r2, 0, 6.28318530718), n2.fill(), u.render.noneZeroLineWidth() && n2.stroke();
    }, E: function(e2, t2, r2, n2, i2, a2) {
    }, P: function() {
      let e2 = u.render.dc();
      e2.shadowBlur = 0, e2.shadowOffsetX = 0, e2.shadowOffsetY = 0, e2.shadowColor = "rgba(0, 0, 0, 0)";
    }, K: function() {
      var e2 = u.render.dc();
      e2.closePath(), e2.fill(), u.render.noneZeroLineWidth() && e2.stroke(), u.render.endPolygonNotification();
    }, C: function() {
      u.render.frameBegin();
    }, k: function() {
      u.render.frameEnd();
    }, H: function(e2, t2, r2, n2) {
      var i2 = u.render.dc();
      i2.beginPath(), i2.moveTo(e2, t2), i2.lineTo(r2, n2), u.render.noneZeroLineWidth() && i2.stroke();
    }, J: function(e2, t2, r2, n2) {
      var i2 = u.render.dc();
      i2.beginPath(), i2.rect(e2, t2, r2, n2), i2.fill(), u.render.noneZeroLineWidth() && i2.stroke();
    }, z: function() {
      u.render.dc().restore();
    }, A: function() {
      u.render.dc().save();
    }, X: function(e2, t2, r2, n2) {
      u.render.dc().fillStyle = "rgba(" + 255 * e2 + "," + 255 * t2 + "," + 255 * r2 + "," + n2 + ")";
    }, F: function(e2, t2, r2, n2, i2, a2) {
      for (var s2 = u.render.dc(), o2 = s2.createLinearGradient(e2, t2, r2, n2), l2 = 0; l2 < 40 * i2; l2 += 40)
        o2.addColorStop(c(a2 + l2, "double"), "rgba(" + 255 * c(a2 + l2 + 8, "double") + "," + 255 * c(a2 + l2 + 16, "double") + "," + 255 * c(a2 + l2 + 24, "double") + "," + c(a2 + l2 + 32, "double") + ")");
      s2.fillStyle = o2;
    }, l: function(e2, t2, r2) {
      var n2 = u.render.dc();
      n2.beginPath(), n2.arc(e2, t2, r2, 0, 6.28318530718), n2.clip();
    }, Y: function() {
      var e2 = u.render.dc();
      e2.closePath(), e2.clip(), u.render.endPolygonNotification();
    }, m: function(e2, t2, r2, n2) {
      var i2 = u.render.dc();
      i2.beginPath(), i2.rect(e2, t2, r2, n2), i2.clip();
    }, S: function(e2) {
      let t2 = u.render.dc();
      t2.shadowBlur = e2;
    }, R: function(e2, t2, r2, n2) {
      let i2 = u.render.dc();
      i2.shadowColor = "rgba(" + 255 * e2 + "," + 255 * t2 + "," + 255 * r2 + "," + n2 + ")";
    }, Q: function(e2, t2) {
      let r2 = u.render.dc();
      r2.shadowOffsetX = e2, r2.shadowOffsetY = t2;
    }, U: function(e2) {
      u.render.dc().font = h(e2);
    }, W: function(e2, t2, r2, n2) {
      u.render.dc().strokeStyle = "rgba(" + 255 * e2 + "," + 255 * t2 + "," + 255 * r2 + "," + n2 + ")";
    }, V: function(e2) {
      u.render.dc().lineWidth = e2, u.render.lineWidthNotification(e2);
    }, G: function(e2, t2, r2, n2, i2) {
      var a2 = u.render.dc();
      a2.textAlign = "left", a2.textBaseline = "top", e2 += r2 < 0 ? -r2 : 0, t2 += n2 < 0 ? -n2 : 0, a2.fillText(h(i2), e2, t2);
    }, n: function(e2, t2, r2) {
      var e2 = (n2 = u.render.dc()).measureText(h(e2)).width, n2 = (n2 = n2.measureText("Op")).actualBoundingBoxAscent + n2.actualBoundingBoxDescent;
      i(t2, e2, "double"), i(r2, n2, "double");
    }, B: function(e2, t2, r2, n2) {
      var i2 = u.render.dc();
      i2.translate(e2, t2), i2.rotate(n2), i2.scale(r2, r2);
    }, u: function(e2, t2) {
      var r2;
      if (e2 === 0)
        r2 = Date.now();
      else {
        if (e2 !== 1 && e2 !== 4)
          return -1;
        r2 = Ee();
      }
      return y[t2 >> 2] = r2 / 1e3 | 0, y[t2 + 4 >> 2] = r2 % 1e3 * 1e3 * 1e3 | 0, 0;
    }, r: function(e2, t2, r2) {
      m.copyWithin(e2, t2, t2 + r2);
    }, s: function(e2) {
      var t2 = m.length, r2 = 2147483648;
      if (r2 < (e2 >>>= 0))
        return false;
      for (var n2, i2 = 1; i2 <= 4; i2 *= 2) {
        var a2 = t2 * (1 + 0.2 / i2), a2 = Math.min(a2, e2 + 100663296);
        if (function(e3) {
          try {
            return o.grow(e3 - d.byteLength + 65535 >>> 16), ee(o.buffer), 1;
          } catch (e4) {
          }
        }(Math.min(r2, (0 < (a2 = Math.max(16777216, e2, a2)) % (n2 = 65536) && (a2 += n2 - a2 % n2), a2))))
          return true;
      }
      return false;
    }, w: function(e2, t2) {
      u.events.invoke(e2, t2);
    }, t: function(e2) {
      return 0;
    }, p: function(e2, t2, r2, n2, i2) {
    }, g: function(e2, t2, r2, n2) {
      for (var i2 = 0, a2 = 0; a2 < r2; a2++) {
        for (var s2 = y[t2 + 8 * a2 >> 2], o2 = y[t2 + (8 * a2 + 4) >> 2], l2 = 0; l2 < o2; l2++)
          W.printChar(e2, m[s2 + l2]);
        i2 += o2;
      }
      return y[n2 >> 2] = i2, 0;
    }, D: function(e2) {
      console.log(new Date().toISOString() + ": " + h(e2));
    }, memory: o, o: function(e2) {
      window.open(h(e2), "_blank");
    }, O: function(e2) {
      u.removeFunction(e2);
    }, j: function(e2) {
      return 0 <= (e2 = +e2) ? +oe(e2 + 0.5) : +se(e2 - 0.5);
    }, q: function(e2) {
      u.render.canvas().style.cursor = h(e2);
    }, table: I }, Fe = (function() {
      var t2 = { a: Te };
      function r2(e2, t3) {
        var e2 = e2.exports;
        u.asm = e2, --A == 0 && z && (e2 = z, z = null, e2());
      }
      function n2(e2) {
        r2(e2.instance);
      }
      function i2(e2) {
        return (typeof fetch == "function" ? fetch(E, { credentials: "same-origin" }).then(function(e3) {
          if (e3.ok)
            return e3.arrayBuffer();
          throw "failed to load wasm binary file at '" + E + "'";
        }).catch(he) : new Promise(function(e3, t3) {
          e3(he());
        })).then(function(e3) {
          return WebAssembly.instantiate(e3, t2);
        }).then(e2, function(e3) {
          a("failed to asynchronously prepare wasm: " + e3), C(e3);
        });
      }
      if (A++, u.instantiateWasm)
        try {
          return u.instantiateWasm(t2, r2);
        } catch (e2) {
          return a("Module.instantiateWasm callback failed with error: " + e2);
        }
      typeof WebAssembly.instantiateStreaming != "function" || ue(E) || typeof fetch != "function" ? i2(n2) : fetch(E, { credentials: "same-origin" }).then(function(e2) {
        return WebAssembly.instantiateStreaming(e2, t2).then(n2, function(e3) {
          return a("wasm streaming compile failed: " + e3), a("falling back to ArrayBuffer instantiation"), i2(n2);
        });
      });
    }(), u.___wasm_call_ctors = function() {
      return (Fe = u.___wasm_call_ctors = u.asm.Z).apply(null, arguments);
    }), U = (u._vizzu_errorMessage = function() {
      return (u._vizzu_errorMessage = u.asm._).apply(null, arguments);
    }, u._vizzu_version = function() {
      return (u._vizzu_version = u.asm.$).apply(null, arguments);
    }, u._vizzu_setLogging = function() {
      return (u._vizzu_setLogging = u.asm.aa).apply(null, arguments);
    }, u._vizzu_init = function() {
      return (u._vizzu_init = u.asm.ba).apply(null, arguments);
    }, u._vizzu_keyPress = function() {
      return (u._vizzu_keyPress = u.asm.ca).apply(null, arguments);
    }, u._vizzu_mouseMove = function() {
      return (u._vizzu_mouseMove = u.asm.da).apply(null, arguments);
    }, u._vizzu_mouseDown = function() {
      return (u._vizzu_mouseDown = u.asm.ea).apply(null, arguments);
    }, u._vizzu_mouseUp = function() {
      return (u._vizzu_mouseUp = u.asm.fa).apply(null, arguments);
    }, u._vizzu_mouseLeave = function() {
      return (u._vizzu_mouseLeave = u.asm.ga).apply(null, arguments);
    }, u._vizzu_mousewheel = function() {
      return (u._vizzu_mousewheel = u.asm.ha).apply(null, arguments);
    }, u._vizzu_poll = function() {
      return (u._vizzu_poll = u.asm.ia).apply(null, arguments);
    }, u._vizzu_update = function() {
      return (u._vizzu_update = u.asm.ja).apply(null, arguments);
    }, u._style_getList = function() {
      return (u._style_getList = u.asm.ka).apply(null, arguments);
    }, u._style_setValue = function() {
      return (u._style_setValue = u.asm.la).apply(null, arguments);
    }, u._style_getValue = function() {
      return (u._style_getValue = u.asm.ma).apply(null, arguments);
    }, u._chart_store = function() {
      return (u._chart_store = u.asm.na).apply(null, arguments);
    }, u._chart_restore = function() {
      return (u._chart_restore = u.asm.oa).apply(null, arguments);
    }, u._chart_free = function() {
      return (u._chart_free = u.asm.pa).apply(null, arguments);
    }, u._chart_getList = function() {
      return (u._chart_getList = u.asm.qa).apply(null, arguments);
    }, u._chart_getValue = function() {
      return (u._chart_getValue = u.asm.ra).apply(null, arguments);
    }, u._chart_setValue = function() {
      return (u._chart_setValue = u.asm.sa).apply(null, arguments);
    }, u._chart_setFilter = function() {
      return (u._chart_setFilter = u.asm.ta).apply(null, arguments);
    }, u._record_getValue = function() {
      return (u._record_getValue = u.asm.ua).apply(null, arguments);
    }, u._data_addDimension = function() {
      return (u._data_addDimension = u.asm.va).apply(null, arguments);
    }, u._data_addMeasure = function() {
      return (u._data_addMeasure = u.asm.wa).apply(null, arguments);
    }, u._data_addRecord = function() {
      return (u._data_addRecord = u.asm.xa).apply(null, arguments);
    }, u._addEventListener = function() {
      return (u._addEventListener = u.asm.ya).apply(null, arguments);
    }, u._removeEventListener = function() {
      return (u._removeEventListener = u.asm.za).apply(null, arguments);
    }, u._event_preventDefault = function() {
      return (u._event_preventDefault = u.asm.Aa).apply(null, arguments);
    }, u._chart_animate = function() {
      return (u._chart_animate = u.asm.Ba).apply(null, arguments);
    }, u._anim_control = function() {
      return (u._anim_control = u.asm.Ca).apply(null, arguments);
    }, u._anim_setValue = function() {
      return (u._anim_setValue = u.asm.Da).apply(null, arguments);
    }, u.___getTypeName = function() {
      return (u.___getTypeName = u.asm.Ea).apply(null, arguments);
    }, u.___embind_register_native_and_builtin_types = function() {
      return (u.___embind_register_native_and_builtin_types = u.asm.Fa).apply(null, arguments);
    }, u._malloc = function() {
      return (U = u._malloc = u.asm.Ga).apply(null, arguments);
    }), V = u._free = function() {
      return (V = u._free = u.asm.Ha).apply(null, arguments);
    };
    u.dynCall_vi = function() {
      return (u.dynCall_vi = u.asm.Ia).apply(null, arguments);
    }, u.dynCall_v = function() {
      return (u.dynCall_v = u.asm.Ja).apply(null, arguments);
    };
    function ke(e2) {
      function t2() {
        M || (M = true, u.calledRun = true, N || (b(re), b(ne), x(u), b(ie)));
      }
      0 < A || (b(te), 0 < A || t2());
    }
    return u.setValue = i, u.getValue = c, u.UTF8ToString = h, u.stringToUTF8 = J, u.addFunction = R, u.removeFunction = function(e2) {
      e2 = e2, s.delete(I.get(e2)), l.push(e2);
    }, z = function e2() {
      M || ke(), M || (z = e2);
    }, (u.run = ke)(), e.ready;
  };
}();
var isAccessibleStylesheet = (e) => {
  try {
    return e.cssRules, true;
  } catch (e2) {
    return false;
  }
};
var getCSSCustomProps = (r = "") => [...document.styleSheets].filter(isAccessibleStylesheet).reduce((e, t) => e.concat([...t.cssRules].filter((e2) => e2.type === 1).reduce((e2, t2) => {
  t2 = [...t2.style].filter((e3) => e3.trim().indexOf("--" + r) === 0).map((e3) => e3.trim());
  return [...e2, ...t2];
}, [])), []);
var getCSSCustomPropsForElement = (e, t = "") => {
  const r = getCSSCustomProps(t), n = getComputedStyle(e);
  return r.map((e2) => [e2, n.getPropertyValue(e2).trim()]).filter((e2) => e2[1] !== "");
};
var propSet = (e, n, i, a) => (n.reduce((e2, t, r) => (r === n.length - 1 ? !a && e2[t] || (e2[t] = i) : e2[t] || (e2[t] = {}), e2[t]), e), e);
var propsToObject = (e, t, i = "", a = false) => t = e.reduce((e2, [t2, r]) => {
  const n = t2.replace("--" + (i ? i + "-" : ""), "");
  t2 = n.split("-");
  return propSet(e2, t2, r, a), e2;
}, t = t || {});
var vizzuOptions = null;
var Vizzu = class {
  static options(e) {
    vizzuOptions = e;
  }
  constructor(e, t) {
    if (this.container = e, this.container instanceof HTMLElement || (this.container = document.getElementById(e)), !this.container)
      throw new Error(`Cannot find container ${this.container} to render Vizzu!`);
    this._propPrefix = "vizzu", this.started = false, this._resolveAnimate = null, this.initializing = new AnimControl((e2) => {
      this._resolveAnimate = e2;
    }, this), this.anim = this.initializing;
    let r = {};
    (vizzuOptions == null ? void 0 : vizzuOptions.wasmUrl) && (r.locateFile = function(e2) {
      return e2.endsWith(".wasm") ? vizzuOptions.wasmUrl : e2;
    }), VizzuModule(r).then((e2) => {
      this._resolveAnimate && this._resolveAnimate(this.init(e2));
    }), t && this.animate(t, 0), this.snapshotRegistry = new FinalizationRegistry((e2) => {
      this.call(this.module._chart_free)(e2);
    });
  }
  call(e) {
    return (...t) => {
      try {
        return e(...t);
      } catch (e2) {
        t = parseInt(e2, 10), t = this.module._vizzu_errorMessage(t), t = this.module.UTF8ToString(t);
        throw new Error("error: " + t);
      }
    };
  }
  iterateObject(r, n, i = "") {
    r && Object.keys(r).forEach((e) => {
      var t = i + (i.length === 0 ? "" : ".") + e;
      r[e] !== null && typeof r[e] == "object" ? this.iterateObject(r[e], n, t) : this.setValue(t, r[e], n);
    });
  }
  setNestedProp(r, e, n) {
    let i = e.split(".");
    i.forEach((e2, t) => {
      t < i.length - 1 ? (r[e2] = r[e2] || {}, r = r[e2]) : r[e2] = n.startsWith("[") ? JSON.parse(n) : n;
    });
  }
  setValue(e, t, r) {
    if (e !== "" + e)
      throw new Error("first parameter should be string");
    e = this.toCString(e), t = this.toCString(String(t).toString());
    try {
      r(e, t);
    } finally {
      this.module._free(t), this.module._free(e);
    }
  }
  setStyle(e) {
    this.iterateObject(e, (e2, t) => {
      this.call(this.module._style_setValue)(e2, t);
    });
  }
  cloneObject(e, t) {
    var r, e = this.call(e)(), e = this.fromCString(e), n = {};
    for (r of JSON.parse(e)) {
      var i = this.toCString(r);
      try {
        var a = this.call(t)(i), s = this.fromCString(a);
        this.setNestedProp(n, r, s);
      } finally {
        this.module._free(i);
      }
    }
    return Object.freeze(n), n;
  }
  get config() {
    return this.cloneObject(this.module._chart_getList, this.module._chart_getValue);
  }
  get styles() {
    return this.cloneObject(this.module._style_getList, this.module._style_getValue);
  }
  setConfig(r) {
    if (r !== null && typeof r == "object" && Object.keys(r).forEach((e) => {
      ["color", "lightness", "size", "label", "x", "y", "noop"].includes(e) && (r.channels = r.channels || {}, r.channels[e] = r[e], delete r[e]);
    }), r == null ? void 0 : r.channels) {
      let t = r.channels;
      Object.keys(t).forEach((e) => {
        typeof t[e] == "string" && (t[e] = [t[e]]), t[e] !== null && !Array.isArray(t[e]) || (t[e] = { set: t[e] }), typeof t[e].attach == "string" && (t[e].attach = [t[e].attach]), typeof t[e].detach == "string" && (t[e].detach = [t[e].detach]), typeof t[e].set == "string" && (t[e].set = [t[e].set]), Array.isArray(t[e].set) && t[e].set.length === 0 && (t[e].set = null);
      });
    }
    this.iterateObject(r, (e, t) => {
      this.call(this.module._chart_setValue)(e, t);
    });
  }
  on(e, t) {
    this._validateModule(), this.events.add(e, t);
  }
  off(e, t) {
    this._validateModule(), this.events.remove(e, t);
  }
  store() {
    this._validateModule();
    var e = this.call(this.module._chart_store)(), t = { id: e };
    return this.snapshotRegistry.register(t, e), t;
  }
  restore(e) {
    this._validateModule(), this.call(this.module._chart_restore)(e.id);
  }
  feature(e, t) {
    this._validateModule(), e === "tooltip" && this.tooltip.enable(t);
  }
  _validateModule() {
    if (!this.module)
      throw new Error("Vizzu not initialized. Use `initializing` promise.");
  }
  animate(e, t) {
    return this.anim = this.anim.then(() => this.animStep(e, t)), this.anim;
  }
  animStep(t, e) {
    if (t) {
      let e2 = Object.assign({}, t);
      var r;
      e2.id ? this.restore(e2) : (e2.data || e2.style !== void 0 || e2.config || (e2 = { config: e2 }), this.data.set(e2.data), e2.style === null && (e2.style = { "": null }), t = JSON.parse(JSON.stringify(e2.style || {})), r = getCSSCustomPropsForElement(this.container, this._propPrefix), this.setStyle(propsToObject(r, t, this._propPrefix)), this.setConfig(Object.assign({}, e2.config)));
    }
    return this.setAnimation(e), new AnimControl((e2) => {
      let t2 = this.module.addFunction(() => {
        e2(this), this.module.removeFunction(t2);
      }, "v");
      this.call(this.module._chart_animate)(t2);
    }, this);
  }
  setAnimation(e) {
    if (e !== void 0) {
      if (e === null ? e = { duration: 0 } : typeof e != "string" && typeof e != "number" || (e = { duration: e }), typeof e != "object")
        throw new Error("invalid animation option");
      e = Object.assign({}, e), this.iterateObject(e, (e2, t) => {
        this.call(this.module._anim_setValue)(e2, t);
      });
    }
  }
  get animation() {
    return this.anim;
  }
  version() {
    this._validateModule();
    var e = this.module._vizzu_version();
    return this.module.UTF8ToString(e);
  }
  start() {
    this.started || (this.call(this.module._vizzu_poll)(), this.render.updateFrame(false), setInterval(() => {
      this.call(this.module._vizzu_poll)();
    }, 10), setInterval(() => {
      this.render.updateFrame(false);
    }, 25), this.started = true);
  }
  getMousePos(e) {
    var t = this.render.clientRect();
    return [e.clientX - t.left, e.clientY - t.top];
  }
  toCString(e) {
    var t = 4 * e.length + 1, r = this.module._malloc(t);
    return this.module.stringToUTF8(e, r, t), r;
  }
  fromCString(e) {
    return this.module.UTF8ToString(e);
  }
  init(e) {
    this.module = e;
    e = this.createCanvas();
    return this.render = new Render(), this.module.render = this.render, this.data = new Data(this), this.events = new Events(this), this.module.events = this.events, this.tooltip = new Tooltip(this), this.render.init(this.call(this.module._vizzu_update), e, false), this.call(this.module._vizzu_init)(), this.call(this.module._vizzu_setLogging)(false), this.setupDOMEventHandlers(e), this.start(), this;
  }
  createCanvas() {
    let e = null, t = this.container;
    if (t instanceof HTMLCanvasElement ? e = t : ((e = document.createElement("CANVAS")).style.width = "100%", e.style.height = "100%", t.appendChild(e)), e instanceof HTMLCanvasElement)
      return e;
    throw new Error("Error initializing <canvas> for Vizzu!");
  }
  setupDOMEventHandlers(e) {
    this.resizeObserver = new ResizeObserver(() => {
      this.render.updateFrame(true);
    }), this.resizeObserver.observe(e), window.addEventListener("resize", () => {
      this.render.updateFrame(true);
    }), e.addEventListener("mousemove", (e2) => {
      e2 = this.getMousePos(e2);
      this.call(this.module._vizzu_mouseMove)(e2[0], e2[1]);
    }), e.addEventListener("mouseup", (e2) => {
      e2 = this.getMousePos(e2);
      this.call(this.module._vizzu_mouseUp)(e2[0], e2[1]);
    }), e.addEventListener("mousedown", (e2) => {
      e2 = this.getMousePos(e2);
      this.call(this.module._vizzu_mouseDown)(e2[0], e2[1]);
    }), e.addEventListener("mouseout", () => {
      this.call(this.module._vizzu_mouseLeave)();
    }), e.addEventListener("wheel", (e2) => {
      this.call(this.module._vizzu_mousewheel)(e2.deltaY);
    }), document.addEventListener("keydown", (t) => {
      let r = t.keyCode <= 255 ? t.keyCode : 0;
      var n = [33, 34, 36, 35, 37, 39, 38, 40, 27, 9, 13, 46];
      for (let e2 = 0; e2 < n.length; e2++)
        t.key === n[e2] && (r = 256 + e2);
      r !== 0 && this.call(this.module._vizzu_keyPress)(r, t.ctrlKey, t.altKey, t.shiftKey);
    });
  }
};
var vizzu_min_default = Vizzu;

// dep:vizzu
var vizzu_default = vizzu_min_default;
export {
  vizzu_default as default
};
//# sourceMappingURL=vizzu.js.map
